<UserControl  x:Class="Kova.Views.MediaControl"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Kova.Views"
      xmlns:vm="clr-namespace:Kova.ViewModel"
                xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
      xmlns:svl ="clr-namespace:WPFSoundVisualizationLib;assembly=WPFSoundVisualizationLib"
      xmlns:materialDesign="MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml"
      mc:Ignorable="d" d:DesignWidth="783" Height="90.116">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <VisualBrush x:Key="VolumeIcon" Stretch="Fill" Visual="{DynamicResource appbar_sound_3}" />
            <VisualBrush x:Key="MuteIcon" Stretch="Fill" Visual="{DynamicResource appbar_sound_mute}" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="{DynamicResource AccentColorBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="20*"/>
            <RowDefinition Height="61*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="508*"/>
            <ColumnDefinition Width="275*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal" 
                    HorizontalAlignment="Right"
            Margin="0,-7,0,10" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <Grid Width="256">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button BorderBrush="White" Style="{DynamicResource MetroCircleButtonStyle}" 
            		Margin="36,28,174,13"
            		Command="{Binding PlayPreviousCommand}">
                    <Rectangle Width="18" Margin="0,0,0,0" 
            			Height="14"
            			Fill="White" >
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_control_rewind_variant}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                <Button BorderBrush="White"
            		Style="{DynamicResource MetroCircleButtonStyle}"
            		Margin="80,10,112,13"
            		Command="{Binding PlayCommand}">
                    <Button.Resources>
                        <VisualBrush x:Key="playIcon" Stretch="Fill" Visual="{DynamicResource appbar_control_play}" />
                        <VisualBrush x:Key="pauseIcon" Stretch="Fill" Visual="{DynamicResource appbar_control_pause}" />
                    </Button.Resources>
                    <Rectangle  Width="22"
            			Height="23"
            			Fill="White" >
                        <Rectangle.Style>
                            <Style TargetType="{x:Type Rectangle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Player.IsPlaying}" Value="True">
                                        <Setter Property="OpacityMask" Value="{DynamicResource pauseIcon}" />
                                        <Setter Property="Margin" Value="0,0,0,0"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Player.IsPlaying}" Value="False">
                                        <Setter Property="Margin" Value="3,0,0,0"/>
                                        <Setter Property="OpacityMask" Value="{DynamicResource playIcon}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                </Button>

                <Button BorderBrush="White" 
            		Style="{DynamicResource MetroCircleButtonStyle}" 
            		Margin="142,28,68,13"
            		Command="{Binding PlayNextCommand}">
                    <Rectangle  Width="18" Margin="2,0,0,0"
            			Height="14"
            			Fill="White" >
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_control_fastforward_variant}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>

                <Button x:Name="VolumeButton" BorderBrush="White" Style="{DynamicResource MetroCircleButtonStyle}" 
            		Margin="0,38,220,13" 
            		Command="{Binding VolumePopupOpenCommand}">
                    <Rectangle Width="16"
            			Height="14" 
            			Fill="White" >
                        <Rectangle.Style>
                            <Style TargetType="{x:Type Rectangle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMuted}" Value="True">
                                        <Setter Property="OpacityMask" Value="{DynamicResource MuteIcon}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMuted}" Value="False">
                                        <Setter Property="OpacityMask" Value="{DynamicResource VolumeIcon}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                </Button>

                <ToggleButton BorderBrush="White" Style="{DynamicResource MetroCircleToggleButtonStyle}"
            		Margin="188,38,32,13" IsChecked="{Binding InRepeatSet, Mode=TwoWay}">
                    <Rectangle Width="15"
            			Height="15"
            			Fill="White">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_repeat}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </ToggleButton>

                <ToggleButton BorderBrush="White" Style="{DynamicResource MetroCircleToggleButtonStyle}"
            		Margin="220,38,0,13" >
                    <Rectangle Width="15"
            			Height="15"
            			Fill="White">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_shuffle}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </ToggleButton>
            </Grid>
        </StackPanel>
        <Popup IsOpen="{Binding IsVolumePopupOpened}" 
               Placement="Top" PopupAnimation="Scroll" 
               AllowsTransparency="True" 
               StaysOpen="False"
               VerticalOffset="-10"
               HorizontalOffset="-67"
               PlacementTarget="{Binding ElementName=VolumeButton}" 
               Grid.ColumnSpan="2" Margin="0,0,205,0">

            <Grid HorizontalAlignment="Center"
                  VerticalAlignment="Center" 
                  Background="{DynamicResource FlatButtonBackgroundBrush}" 
                  Width="212" Height="34">

                <Button BorderBrush="Transparent" Style="{DynamicResource MetroCircleButtonStyle}" 
                     Margin="0,0,174,0" 
                     Command="{Binding MuteCommand}" RenderTransformOrigin="-0.75,0.4">
                    <Rectangle Margin="0,2,0,0"
                               Width="20"
                               Height="17" 
                       Fill="{DynamicResource GrayBrush2}" >
                        <Rectangle.Style>
                            <Style TargetType="{x:Type Rectangle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMuted}" Value="True">
                                        <Setter Property="OpacityMask" Value="{DynamicResource MuteIcon}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMuted}" Value="False">
                                        <Setter Property="OpacityMask" Value="{DynamicResource VolumeIcon}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                </Button>
                <Slider x:Name="horizSlider"
                        Margin="38,11,13,0"
                        Maximum="1" LargeChange="0.25"
                        Minimum="0" Value="{Binding Player.Volume, Mode=TwoWay}"
                        Style="{StaticResource FlatSlider}"
                        SmallChange="1"
                    Height="11" VerticalAlignment="Top" Width="Auto" />
            </Grid>
        </Popup>

        <Slider Minimum="0" Maximum="100"
                Value="{Binding Player.ChannelPosition, Mode=TwoWay}" 
                Foreground="White" 
                HorizontalAlignment="Stretch"
                Margin="86,45,77,0" 
                Height="20" VerticalAlignment="Bottom" 
                 
                Grid.ColumnSpan="2" Grid.Row="1" >
            <Slider.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </Slider.Resources>
        </Slider>

        <svl:AlbumArtDisplay Margin="18,17,438,28"
                             HorizontalAlignment="Left"
                             AlbumArtImage="{Binding AlbumArtWork}"
                             Grid.RowSpan="2"/>

        <TextBlock FontSize="17"
                   Foreground="{DynamicResource ValidationTextBrush}"
                   HorizontalAlignment="Left"
                   Margin="79,18,0,0" 
                   TextWrapping="Wrap" 
                   Text="{Binding CurrentSong.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                   VerticalAlignment="Top" Width="266" Height="23" Grid.RowSpan="2"/>
        <TextBlock FontSize="15"
                   Foreground="{DynamicResource GrayBrush8}"
                   Text="{Binding CurrentSong.Artist}" 
                   HorizontalAlignment="Left" 
                   Margin="79,21,0,0" 
                   Grid.Row="1" 
                   TextWrapping="Wrap" 
                   VerticalAlignment="Top" 
                   Height="19" Width="137"/>

        <TextBlock x:Name="CurrentTimeText" FontSize="16" 
                   Text="{Binding CurrentTime}" 
                   HorizontalAlignment="Left"  
                   Margin="18,42,0,0" Grid.Row="1"
                   Foreground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                   TextWrapping="Wrap" 
                   VerticalAlignment="Top" Width="61" Height="21"/>

        <TextBlock x:Name="TotalTimeText" FontSize="16"
                   Text="{Binding Player.ActiveStream.TotalTime}" 
                   HorizontalAlignment="Right"  
                   Margin="0,42,10,0" Grid.Row="1"
                   Foreground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                   TextWrapping="Wrap" 
                   VerticalAlignment="Top" Width="60" Height="21" Grid.Column="1"/>
    </Grid>
</UserControl>
